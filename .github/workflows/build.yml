name: SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path ${{ runner.temp }}\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path ${{ runner.temp }}\scanner
          
      - name: Build, test and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          # 1. Start the SonarQube analysis
          ${{ runner.temp }}\scanner\dotnet-sonarscanner begin `
              /k:"ColanderLepus_HappyCuber" `
              /o:"colanderlepus" `
              /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
              /d:sonar.cs.opencover.reportsPaths="**\TestResults\coverage.xml" # <--- IMPORTANT: Tell Sonar where to look
          
          # 2. Build the solution
          dotnet build

          # 3. Run the tests
          dotnet test `
            --no-build `
            /p:CollectCoverage=true `
            /p:CoverletOutputFormat=opencover `
            /p:CoverletOutput=TestResults\coverage.xml

          # 4. End the SonarQube analysis
          ${{ runner.temp }}\scanner\dotnet-sonarscanner end `
              /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
